{"ast":null,"code":"var _jsxFileName = \"/home/aum/Downloads/reactExercise/01-starting-project/frontend/src/pages/Authentication.js\";\nimport { json } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action(_ref) {\n  let {\n    request\n  } = _ref;\n  const searchParams = new URL(request.url).searchParams;\n  // const mode = searchParams.get('mode') || 'login';\n\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported mode!'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost/8080/' + mode, {\n    method: 'POST',\n    header: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status == 422) {}\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","searchParams","URL","url","mode","message","status","data","formData","authData","email","get","password","response","fetch","method","header","body","JSON","stringify","$RefreshReg$"],"sources":["/home/aum/Downloads/reactExercise/01-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({request}){\n  const searchParams = new URL(request.url).searchParams;\n  // const mode = searchParams.get('mode') || 'login';\n\n  if(mode !== 'login' && mode !== 'signup'){\n    throw json({ message: 'Unsupported mode!' }, { status: 422 }); \n  }\n\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n\n  const response = await fetch('http://localhost/8080/' + mode, {\n    method: 'POST',\n    header: {'Content-Type': 'application/json'},\n    body: JSON.stringify(authData)\n  });\n\n  if(response.status == 422){\n\n  }\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAW;EAAA,IAAV;IAACC;EAAO,CAAC,GAAAD,IAAA;EACpC,MAAME,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD;;EAEA,IAAGG,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACvC,MAAMhB,IAAI,CAAC;MAAEiB,OAAO,EAAE;IAAoB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/D;EAEA,MAAMC,IAAI,GAAG,MAAMP,OAAO,CAACQ,QAAQ,EAAE;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,QAAQ,EAAEL,IAAI,CAACI,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAC5DW,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAGI,QAAQ,CAACP,MAAM,IAAI,GAAG,EAAC,CAE1B;AACF;AAAC,IAAAT,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}